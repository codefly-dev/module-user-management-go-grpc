package adapters

/* -----------------------------------------------------------------

⚠️ This code is generated by the agent. Do not edit this file!


----------------------------------------------------------------- */

import (
	"context"
	"fmt"
)

type Server struct {
	Grpc *GrpcServer
	Rest *RestServer
}

func NewServer(config *Configuration) (*Server, error) {

	grpc, err := NewGrpServer(config)
	if err != nil {
		return nil, err
	}
	var rest *RestServer
	if config.EndpointHttpPort != nil {
		rest, err = NewRestServer(config)
		if err != nil {
			return nil, err
		}
	}
	return &Server{
		Grpc: grpc,
		Rest: rest,
	}, nil
}

func (server *Server) Start(ctx context.Context) error {
	if server.Rest != nil {
		go func() {
			err := server.Rest.Run(ctx)
			if err != nil {
				panic(err)
			}
		}()
	}
	return server.Grpc.Run(ctx)
}

func (server *Server) Stop() {
	fmt.Println("Stopping server...")
	server.Grpc.gRPC.GracefulStop()
}
